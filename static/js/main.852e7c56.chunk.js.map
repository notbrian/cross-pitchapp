{"version":3,"sources":["components/Landing.jsx","components/Main.jsx","components/Create.jsx","components/Scan.jsx","components/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","Title","h1","_templateObject2","Subtitle","p","_templateObject3","PitchBtn","Link","_templateObject4","Landing","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","to","Component","Main_templateObject","Action","Main_templateObject2","Main","Main_Container","Create","Scan_templateObject","Header","Scan_templateObject2","Scan","video","document","querySelector","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","log","Scan_Container","autoPlay","id","Login_templateObject","Submit","input","Login_templateObject2","Login","user","password","authenticated","handleUser","bind","assertThisInitialized","handlePass","handleSubmit","event","setState","target","value","preventDefault","Redirect","Login_Container","onSubmit","type","onChange","App","BrowserRouter","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.852e7c56.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    text-align: Center;\n    display: grid;\n    place-items: center;\n    grid-auto-rows: auto;\n    height: 100vh;\n    /* background-color: red; */\n\n`\n\nconst Title = styled.h1`\n    align-self: center;\n  justify-self: center;\n`\n\nconst Subtitle = styled.p`\n    align-self: center;\n  justify-self: center;\n`\nconst PitchBtn = styled(Link)`\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n`\n\nclass Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return (\n        \n        <Container>\n            <div>\n            <Title> Pitch </Title>\n            <Subtitle>Welcome to Pitch, you pitching tonight?</Subtitle>\n            <PitchBtn to=\"/login\">Start Pitching</PitchBtn>\n            </div>\n\n        </Container>\n        \n        );\n    }\n}\n \nexport default Landing;","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    text-align: Center;\n    display: grid;\n    place-items: center;\n    grid-auto-rows: auto;\n    height: 100vh;\n    /* background-color: red; */\n\n`\n\nconst Action = styled(Link) `\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n    width: 100px;\n    height: 100px;\n\n    display:flex;/*CSS3*/\n    align-items:center;/*Vertical align*/\n    justify-content:center; /*horizontal align*/\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n\n`\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return (\n      <Container>\n          <div> \n            <Action to=\"/create\">Create Pitch</Action>\n            <Action to=\"/scan\"> Scan Pitch</Action>\n          </div>\n      </Container>);\n  }\n}\n \nexport default Main;","import React, { Component } from 'react';\n\nclass Create extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return (<h1> Create </h1>);\n    }\n}\n \nexport default Create;","import React, { Component } from 'react';\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n    text-align: Center;\n    display:flex;/*CSS3*/\n    align-items:center;\n    justify-content:center;\n    height: 100vh;\n`\n\nconst Header = styled.h1`\n`\n\nclass Scan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    var video = document.querySelector(\"#videoElement\");\n \n    if (navigator.mediaDevices.getUserMedia) {       \n        navigator.mediaDevices.getUserMedia({video: true})\n      .then(function(stream) {\n        video.srcObject = stream;\n      })\n      .catch(function(error) {\n        console.log(\"Something went wrong!\");\n      });\n    }\n  }\n  render() {\n    \n\n    return (\n      <Container>\n          <div>\n            <Header >Scan</Header>\n        <video autoPlay={true} id=\"videoElement\">\n \n        </video>\n          </div>\n        \n      </Container>\n    );\n  }\n}\n\nexport default Scan;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\n\nconst Container = styled.div`\n  text-align: Center;\n  display: grid;\n  place-items: center;\n  grid-auto-rows: auto;\n  height: 100vh;\n  /* background-color: red; */\n`;\n\nconst Submit = styled.input `\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: black;\n\n`\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n      authenticated: false\n    };\n\n    this.handleUser = this.handleUser.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleUser(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePass(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({authenticated: true})\n  }\n  render() {\n\n    if(this.state.authenticated) {\n        return(<Redirect to=\"/main\"></Redirect>)\n    }\n\n    return (\n      <Container>\n        <div>\n          <h1>Login</h1>\n          <form onSubmit={this.handleSubmit}>\n              <p>Username</p>\n              <input\n                type=\"text\"\n                value={this.state.user}\n                onChange={this.handleUser}\n              />\n              <p>Password</p>\n              <input\n                type=\"text\"\n                value={this.state.password}\n                onChange={this.handlePass}\n              />\n            <Submit type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Landing from \"./components/Landing.jsx\"\nimport Main from \"./components/Main.jsx\"\nimport Create from \"./components/Create.jsx\"\nimport Scan from \"./components/Scan.jsx\"\nimport Login from \"./components/Login.jsx\"\n\n\nconst App = () => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={Landing} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/main\"  component={Main} />\n      <Route path=\"/create\" component={Create} />\n      <Route path=\"/scan\" component={Scan} />\n    </div>\n  </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}