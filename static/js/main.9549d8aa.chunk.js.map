{"version":3,"sources":["icons/pot.svg","components/Landing.jsx","components/Main.jsx","components/Create.jsx","components/Scan.jsx","components/Login.jsx","components/PitchScan.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Submit","_templateObject2","Link","_templateObject3","input","_templateObject4","TopBar","_templateObject5","Title","h1","_templateObject6","Landing","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUser","event","setState","user","target","value","handlePass","password","handleSubmit","preventDefault","authenticated","state","react_default","a","createElement","Redirect","to","onSubmit","type","onChange","Component","Main_templateObject","Action","Main_templateObject2","Main_templateObject3","Main_templateObject4","Main","Main_Container","Main_TopBar","Main_Title","require","Create_templateObject","Create_templateObject2","Confirm","Create_templateObject3","Create_templateObject4","Create","handleChange","defineProperty","name","confirm","nameT","total","numPeople","owner","pitchData","perPerson","Math","round","parseInt","pathname","Create_Container","htmlFor","id","placeholder","min","max","Create_Submit","Scan_templateObject","Heading","Scan_templateObject2","Scan_templateObject3","Scan","handleScan","data","parsed","JSON","parse","property","display","delay","result","err","console","error","Scan_Container","Scan_Heading","Scan_Confirm","lib_default","style","height","width","onError","handleError","onScan","Login_templateObject","Login_templateObject2","Login","bind","assertThisInitialized","Login_Container","Login_Submit","QRCode","PitchScan_templateObject","PitchScan_templateObject2","PitchScan_templateObject3","pitchScan","PitchScan_templateObject4","location","PitchScan_Container","PitchScan_QRCode","concat","stringify","src","potLogo","alt","PitchScan_Heading","NoMatch","_ref","App","BrowserRouter","basename","process","Switch","Route","path","exact","component","PitchScan","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9549d8aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pot.342a126b.svg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\n\nconst Container = styled.div`\n  text-align: Center;\n  display: grid;\n  place-items: center;\n  grid-auto-rows: auto;\n  height: 100vh;\n  /* background-color: red; */\n`;\n\n\n\nconst Subtitle = styled.p`\n  align-self: center;\n  justify-self: center;\n`;\nconst PitchBtn = styled(Link)`\n  text-decoration: none;\n  display: block;\n  margin-top: 1vh;\n  padding: 10px;\n  border: 2px solid black;\n  color: #2e8b57;\n  transition: 0.5s ease-in;\n\n  :hover {\n    background-color: black;\n    color: white;\n  }\n`;\n\nconst Submit = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n\n  text-decoration: none;\n  display: block;\n  margin-top: 1vh;\n  padding: 10px;\n  border: 2px solid black;\n  color: black;\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100vw;\n  top: 0;\n  left: 0;\n  height: 20vh;\n  background-color: #a6d496;\n\n`;\n\nconst Title = styled.h1`\n  align-self: flex-end;\n  justify-self: center;\n  letter-spacing: 5px;\n  bottom: 0;\n`;\nclass Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n      authenticated: false\n    };\n  }\n\n  handleUser = event => {\n    this.setState({ user: event.target.value });\n  };\n\n  handlePass = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ authenticated: true });\n  };\n\n  render() {\n    if (this.state.authenticated) {\n      return <Redirect to=\"/main\" />;\n    }\n\n    return (\n      <Container>\n        <div>\n          <TopBar>\n            <Title> PITCH </Title>\n          </TopBar>\n          <form onSubmit={this.handleSubmit}>\n            <p>Username</p>\n            <input\n              type=\"text\"\n              value={this.state.user}\n              onChange={this.handleUser}\n            />\n            <p>Password</p>\n            <input\n              type=\"text\"\n              value={this.state.password}\n              onChange={this.handlePass}\n            />\n            <Submit type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    text-align: Center;\n    display: grid;\n    place-items: center;\n    grid-auto-rows: auto;\n    height: 100vh;\n    /* background-color: red; */\n\n`\n\nconst Action = styled(Link) `\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n    width: 100px;\n    height: 100px;\n\n    display:flex;/*CSS3*/\n    align-items:center;/*Vertical align*/\n    justify-content:center; /*horizontal align*/\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n\n`\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100vw;\n  top: 0;\n  left: 0;\n  height: 20vh;\n  background-color: #a6d496;\n\n`;\n\nconst Title = styled.h1`\n  align-self: flex-end;\n  justify-self: center;\n  letter-spacing: 5px;\n  bottom: 0;\n`;\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return (\n      <Container>\n          <TopBar>\n            <Title> PITCH </Title>\n          </TopBar>\n          <div> \n            <Action to=\"/create\">Create Pitch</Action>\n            <Action to=\"/scan\"> Scan Pitch</Action>\n          </div>\n      </Container>);\n  }\n}\n \nexport default Main;","import React, { Component } from 'react';\nimport styled from \"styled-components\"\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nvar QRCode = require('qrcode.react');\n\n\n\nconst Container = styled.div`\n    text-align: Center;\n    display:flex;/*CSS3*/\n    align-items:center;\n    justify-content:center;\n    height: 100vh;\n\n    div form input{\n        display: block;\n    }\n`\n\nconst Submit = styled.input `\n   text-decoration: none;\n   margin-left: auto;\n   margin-right: auto;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n`\n\nconst Heading = styled.h1`\n\n`\nconst Confirm = styled(Link)`\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n`\n\n\n\nclass Create extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirm: false,\n            nameT: \"\",\n            total: 0,\n            numPeople: 0,\n            owner: \"Brian Nguyen\"\n        }\n    }\n\n    \n    handleChange = (event) => {\n           \n        this.setState({ [event.target.name]: event.target.value });\n\n}\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({confirm: true})\n    }\n\n\n    render() { \n        let confirm = \"\";\n\n        //   <QRCode value={`${pitchData}`} />\n        if(this.state.confirm) {\n            let pitchData = {\n                nameT: this.state.nameT,\n                total: this.state.total,\n                numPeople: this.state.numPeople,\n                owner: this.state.owner,\n                perPerson: Math.round(parseInt(this.state.total)/parseInt(this.state.numPeople))\n            }\n            confirm = (\n                <div>\n                  <p> CAD${pitchData.total}/{pitchData.numPeople} people</p>\n                  <p> = CAD${Math.round(pitchData.perPerson)} per person</p>\n                    \n                  <Confirm to={{\n                      pathname: '/pitchScan',\n                      state: {\n                        nameT: this.state.nameT,\n                        total: this.state.total,\n                        numPeople: this.state.numPeople,\n                        owner: this.state.owner,\n                        perPerson: pitchData.perPerson\n                      }\n                  }}>Confirm</Confirm>\n                </div>\n            \n          \n            )\n        }\n\n\n        return (\n        <Container>\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"nameT\">What for?</label>\n                <input type=\"text\" name=\"nameT\" id=\"nameT\" placeholder=\"dinner\" onChange={this.handleChange}/>\n                <label htmlFor=\"total\">Total $CAD</label>\n                <input type=\"text\" name=\"total\" id=\"total\" onChange={this.handleChange} placeholder=\"50?\"/>\n                <label htmlFor=\"numPeople\"># of People </label>\n                <input type=\"range\" name=\"numPeople\" id=\"numPeople\" onChange={this.handleChange}  min=\"0\" max=\"11\"/>\n                <Submit type=\"submit\" value=\"Generate\"/>\n              </form>\n              {confirm}\n            </div>\n        </Container>\n        );\n    }\n}\n \nexport default Create;","import React, { Component } from 'react';\nimport styled from \"styled-components\"\nimport QrReader from 'react-qr-scanner'\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n\nconst Container = styled.div`\n    text-align: Center;\n    display:flex;/*CSS3*/\n    align-items:center;\n    justify-content:center;\n    height: 100vh;\n`\n\nconst Heading = styled.h1`\n`\n\nconst Confirm = styled(Link)`\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n`\n\nclass Scan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delay: 100,\n      result: 'No result',\n      display: false\n    };\n\n\n  }\n\n  componentDidMount() {\n   \n  }\n\n  handleScan = (data) => {\n    if(data === null) {return}\n    let parsed = JSON.parse(data);\n\n    for(let property in parsed) {\n      this.setState({\n        [property]: parsed[property]\n      })\n    }\n\n    // if(this.state.result !== \"No result\") {\n    //   console.log(\"scanned\")\n    // }\n\n\n    this.setState({\n      display: true\n    })\n\n\n  }\n\n  handleError(err){\n    console.error(err)\n  }\n\n  render() {\n    const previewStyle = {\n      height: 240,\n      width: 320,\n    }\n\n    if(this.state.display) {\n      return(\n        <Container>\n          <div>\n            <Heading >Scan</Heading>\n        <p>Pitching CAD${this.state.perPerson} to {this.state.owner}</p>\n        <p>for {this.state.nameT} (${this.state.total})</p>\n        <Confirm to=\"/pay\"> Confirm Payment</Confirm>\n          </div>\n        \n      </Container>\n\n      )\n    }\n\n\n\n    return (\n      <Container>\n          <div>\n            <Heading >Scan</Heading>\n            <QrReader\n          delay={this.state.delay}\n          style={previewStyle}\n          onError={this.handleError}\n          onScan={this.handleScan}\n          \n          />\n        <p>{this.state.result}</p>\n          </div>\n        \n      </Container>\n    );\n  }\n}\n\nexport default Scan;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\n\nconst Container = styled.div`\n  text-align: Center;\n  display: grid;\n  place-items: center;\n  grid-auto-rows: auto;\n  height: 100vh;\n  /* background-color: red; */\n`;\n\nconst Submit = styled.input `\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: black;\n\n`\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n      authenticated: false\n    };\n\n    this.handleUser = this.handleUser.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleUser(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePass(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({authenticated: true})\n  }\n  render() {\n\n    if(this.state.authenticated) {\n        return(<Redirect to=\"/main\"></Redirect>)\n    }\n\n    return (\n      <Container>\n        <div>\n          <h1>Login</h1>\n          <form onSubmit={this.handleSubmit}>\n              <p>Username</p>\n              <input\n                type=\"text\"\n                value={this.state.user}\n                onChange={this.handleUser}\n              />\n              <p>Password</p>\n              <input\n                type=\"text\"\n                value={this.state.password}\n                onChange={this.handlePass}\n              />\n            <Submit type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport styled from \"styled-components\"\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport potLogo from '../icons/pot.svg'\nvar QRCode = require('qrcode.react');\n\n\n\nconst Container = styled.div`\n    text-align: Center;\n    display:flex;/*CSS3*/\n    align-items:center;\n    justify-content:center;\n    height: 100vh;\n\n    div form input{\n        display: block;\n    }\n`\n\nconst Submit = styled.input `\n   text-decoration: none;\n   margin-left: auto;\n   margin-right: auto;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n`\n\nconst Heading = styled.h1`\n\n`\nconst Confirm = styled(Link)`\n    text-decoration: none;\n    display: block;\n    margin-top: 1vh;\n    padding: 10px;\n    border: 2px solid black;\n    color: #2e8b57;\n    transition: 0.5s ease-in;\n\n    :hover {\n        background-color: black;\n        color:white;\n    }\n`\n\n\n\nclass pitchScan extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameT: this.props.location.state.nameT,\n            total: this.props.location.state.total,\n            numPeople: this.props.location.state.numPeople,\n            owner: this.props.location.state.owner,\n            perPerson: this.props.location.state.perPerson\n            \n        }\n\n\n    }\n\n\n\n    render() { \n      \n\n      \n\n        return (\n        <Container>\n            <div>\n              <QRCode value={`${JSON.stringify(this.state)}`} />\n              <p >{this.state.nameT}</p>\n              <p >{this.state.perPerson} per person</p>\n              <img src={potLogo} alt=\"pot\"/>\n              <Heading> 1/{this.state.numPeople} Pitched </Heading>\n            </div>\n        </Container>\n        );\n    }\n}\n \nexport default pitchScan;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Landing from \"./components/Landing.jsx\"\nimport Main from \"./components/Main.jsx\"\nimport Create from \"./components/Create.jsx\"\nimport Scan from \"./components/Scan.jsx\"\nimport Login from \"./components/Login.jsx\"\nimport PitchScan from \"./components/PitchScan.jsx\"\nimport './App.css';\n\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div>\n      <Switch>\n      <Route path=\"/\" exact component={Landing} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/main\"  component={Main} />\n      <Route path=\"/create\" component={Create} />\n      <Route path=\"/scan\" component={Scan} />\n      <Route path=\"/pitchScan\" component={PitchScan} />\n      <Route component={NoMatch} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nfunction NoMatch({ location }) {\n  return (\n    <div>\n      <h3>\n        404 not found <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}